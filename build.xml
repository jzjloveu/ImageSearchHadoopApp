<project basedir="." default="all">

  <target name="setup">

    <echo message="Setting properties for build task..."/>

    <!-- IMPORTANT: You must update the following two properties according to your Hadoop setup -->
    <!-- <property name="hadoop.home" value="/usr/local/Cellar/hadoop/2.6.0/libexec/share/hadoop" /> -->
    <!-- <property name="hadoop.version" value="2.6.0" /> -->
      <property name="hadoop.home" value="/DCNFS/applications/cdh/5.2/app/hadoop-2.5.0-cdh5.2.0/share/hadoop" />
      <property name="hadoop.version" value="2.5.0-cdh5.2.0" />


    <property name="hipi.version" value="2.0" />

    <!-- Hadoop dependencies -->
    <property name="hadoop.classpath" value="${hadoop.home}/common/hadoop-common-${hadoop.version}.jar:${hadoop.home}/mapreduce/hadoop-mapreduce-client-core-${hadoop.version}.jar:${hadoop.home}/common/lib/commons-cli-1.2.jar:${hadoop.home}/common/lib/hadoop-auth-${hadoop.version}.jar:${hadoop.home}/hdfs/hadoop-hdfs-${hadoop.version}.jar:${hadoop.home}/common/hadoop-nfs-${hadoop.version}.jar" />

    <!-- External dependencies -->
    <property name="junit.jar" value="${hadoop.home}/common/lib/junit-4.11.jar" />
    <property name="hamcrest.jar" value="${hadoop.home}/common/lib/hamcrest-core-1.3.jar" />
    <property name="commons.logging.jar" value="${hadoop.home}/common/lib/commons-logging-1.1.3.jar" />
    <property name="guava.jar" value="${hadoop.home}/common/lib/guava-11.0.2.jar" />
    <property name="commons.collections.jar" value="${hadoop.home}/common/lib/commons-collections-3.2.1.jar" />
    <property name="commons.lang.jar" value="${hadoop.home}/common/lib/commons-lang-2.6.jar" />
    <property name="commons.configuration.jar" value="${hadoop.home}/common/lib/commons-configuration-1.6.jar" />
    <property name="slf4j.api.jar" value="${hadoop.home}/common/lib/slf4j-api-1.7.5.jar" />
    <property name="log4j.jar" value="${hadoop.home}/common/lib/log4j-1.2.17.jar" />
    <property name="avro.jar" value="${hadoop.home}/common/lib/avro-1.7.4.jar" />

    <!-- https://drewnoakes.com/code/exif/ -->    
    <property name="xmpcore.jar" value="./3rdparty/xmpcore-5.1.2.jar" />
    <property name="metadata.jar" value="./3rdparty/metadata-extractor-2.7.2.jar" />

    <echo message="Properties set."/>
  </target>

  <target name="test_settings">
    <echo message="Confirming that hadoop settings are set..."/>
    <fail unless="hadoop.home" message="The property hadoop.home was not specified.${line.separator}You must specify the home directory for Hadoop in the build.xml file.${line.separator}See http://hipi.cs.virginia.edu/gettingstarted.html for details."/>
    <fail unless="hadoop.version" message="The property hadoop.version was not specified.${line.separator}You must specify the version of Hadoop you are using in the build.xml file.${line.separator}See http://hipi.cs.virginia.edu/gettingstarted.html for details."/>
    <fail message="File does not exist: ${hadoop.home}/common/hadoop-common-${hadoop.version}.jar${line.separator}Check the hadoop.home and hadoop.version properties in build.xml.${line.separator}See http://hipi.cs.virginia.edu/gettingstarted.html for details.">
      <condition>
        <not>
          <available file="${hadoop.home}/common/hadoop-common-${hadoop.version}.jar" />
        </not>
      </condition>      
    </fail>
    <echo message="Properties are specified properly."/>
  </target>

  <target name="compile" depends="setup,test_settings,hipi">

    <mkdir dir="bin" />
    
    <!-- Compile -->
    <javac debug="yes" nowarn="on" includeantruntime="no" srcdir="${srcdir}" destdir="./bin" classpath="${hadoop.classpath}:./lib/hipi-${hipi.version}.jar">
      <compilerarg value="-Xlint:deprecation" />
    </javac>
    
    <!-- Create the jar -->
    <jar destfile="${jardir}/${jarfilename}" basedir="./bin">
      <zipfileset src="./lib/hipi-${hipi.version}.jar" />
      <manifest>
	       <attribute name="Main-Class" value="${mainclass}" />
      </manifest>
    </jar>
    
  </target>

  <!-- Builds HIPI Library -->
  <target name="hipi" depends="setup, test_settings">
    <echo message="Building the hipi library..."/>
    <ant antfile="build.xml" dir="libsrc">
      <property name="hadoop.home" value="/DCNFS/applications/cdh/5.2/app/hadoop-2.5.0-cdh5.2.0/share/hadoop" />
      <property name="hadoop.version" value="2.5.0-cdh.5.2.0" />
      <property name="hadoop.classpath" value="${hadoop.classpath}" />
       <!-- https://drewnoakes.com/code/exif/ -->
      <property name="xmpcore.jar" value="../3rdparty/xmpcore-5.1.2.jar" />
      <property name="metadata.jar" value="../3rdparty/metadata-extractor-2.7.2.jar" />
      <!-- Unit test dependencies -->
      <property name="junit.jar" value="${hadoop.home}/common/lib/junit-4.11.jar" />
    </ant>
    <echo message="Hipi library built."/>
  </target>

  <!-- Builds utility 'hibimport' which creates a HIB file on the HDFS from a set of images on the local FX -->
  <target name="hibimport">
    <echo message="Building 'hibimport' utility..."/>
    <antcall target="compile">
      <param name="srcdir" value="libsrc/hipi/tool" />
      <param name="jarfilename" value="hibimport.jar" />
      <param name="jardir" value="tool" />
      <param name="mainclass" value="hipi.tool.CreateHipiImageBundle" />
    </antcall>
    <echo message="Hibimport built."/>
  </target>

  <!-- Downloads a list of URLs and creates a single HIB (see http://hipi.cs.virginia.edu/examples/downloader.html) -->
  <target name="downloader">
    <echo message="Building downloader example..."/>
    <antcall target="compile">
      <param name="srcdir" value="examples/hipi/examples/downloader" />
      <param name="jarfilename" value="downloader.jar" />
      <param name="jardir" value="examples" />
      <param name="mainclass" value="hipi.examples.downloader.Downloader" />
    </antcall>
    <echo message="Downloader built."/>
  </target>

  <!-- Display basic information about a HIB file (see http://hipi.cs.virginia.edu/examples/dumphib.html) -->
  <target name="dumphib">
    <echo message="Building dumphib example..."/>
    <antcall target="compile">
      <param name="srcdir" value="examples/hipi/examples/dumphib" />
      <param name="jarfilename" value="dumphib.jar" />
      <param name="jardir" value="examples" />
      <param name="mainclass" value="hipi.examples.dumphib.DumpHib" />
    </antcall>
    <echo message="Dumphib built."/>
  </target>

  <!-- Extracts individual JPEG images contained within a HIB file (see http://hipi.cs.virginia.edu/examples/jpegfromhib.html) -->
  <target name="jpegfromhib">
    <echo message="Building jpegfromhib example..."/>
    <antcall target="compile">
      <param name="srcdir" value="examples/hipi/examples/jpegfromhib" />
      <param name="jarfilename" value="jpegfromhib.jar" />
      <param name="jardir" value="examples" />
      <param name="mainclass" value="hipi.examples.jpegfromhib.JpegFromHib" />
    </antcall>
    <echo message="Jpegfromhib built."/>
  </target>

  <!-- Converts a HIB file into a Hadoop SequenceFile (see http://hipi.cs.virginia.edu/examples/createSequenceFile.html) -->
  <target name="createsequencefile">
    <echo message="Building createsequencefile example..."/>
    <antcall target="compile">
      <param name="srcdir" value="examples/hipi/examples/createsequencefile" />
      <param name="jarfilename" value="createsequencefile.jar" />
      <param name="jardir" value="examples" />
      <param name="mainclass" value="hipi.examples.createsequencefile.CreateSequenceFile" />
    </antcall>
    <echo message="Createsequencefile built."/>
  </target>

  <!-- Used to compute the principal components of natural image patches (see http://hipi.cs.virginia.edu/examples/pca.html) -->
  <target name="covariance">
    <echo message="Building covariance example..."/>
    <antcall target="compile">
      <param name="srcdir" value="examples/hipi/examples/covariance" />
      <param name="jarfilename" value="covariance.jar" />
      <param name="jardir" value="examples" />
      <param name="mainclass" value="hipi.examples.covariance.Covariance" />
    </antcall>
    <echo message="Covariance built."/>
  </target>

  <!-- Runs all of the HIPI unit tests -->
  <target name="test" depends="setup,test_settings,hipi">
    <javac includeantruntime="false" fork="true" srcdir="libsrc/hipi/unittest" destdir="lib/hipi/unittest" classpath="${hadoop.classpath}:./lib/hipi-${hipi.version}.jar:${junit.jar}:${hamcrest.jar}" debug="yes"></javac>
    <java fork="true" maxmemory="2048m" classname="org.junit.runner.JUnitCore" classpath="${hadoop.classpath}:${hamcrest.jar}:${junit.jar}:${commons.logging.jar}:${guava.jar}:${commons.collections.jar}:${commons.configuration.jar}:${commons.lang.jar}:${slf4j.api.jar}:${log4j.jar}:${avro.jar}:./lib/hipi-${hipi.version}.jar">
      <arg value="hipi.unittest.AllTests"/>
    </java>
  </target>

  <!-- Produces HIPI javadoc documentation for HIPI -->
   <target name="doc" depends="setup,test_settings,hipi">

    <!-- Delete existing version of docs -->
    <delete dir = "./doc/api" />
    <mkdir dir="./doc/api" />

     <javadoc packagenames="hipi.*"
	      excludepackagenames="hipi.container"
	      sourcepath="./libsrc"
	      destdir="./doc/api"
	      windowtitle="HIPI - Hadoop Image Processing Interface"
	      classpath="${hadoop.classpath}:${junit.jar}:${xmpcore.jar}:${metadata.jar}">
       <doctitle><![CDATA[<h1>HIPI - Hadoop Image Processing Interface</h1>]]></doctitle>
       <bottom><![CDATA[<i>Copyright &#169; 2014 <a target="_blank" href="http://www.virginia.edu/">University of Virginia</a>. All Rights Reserved.</i>]]></bottom>
       <link href="http://docs.oracle.com/javase/6/docs/api/"/>
       <link href="http://hadoop.apache.org/docs/stable/api/"/>
       <link href="http://javadoc.metadata-extractor.googlecode.com/git/2.7.0/"/>
     </javadoc>
    
   </target>
  
   <target name="all" depends="hipi,hibimport,downloader,dumphib,jpegfromhib,createsequencefile,covariance" />

   <!-- First Program -->
   <target name="firstprog">
	   <antcall target="compile">
		<param name="srcdir" value="firstprog" />
		<param name="jarfilename" value="firstprog.jar" />
		<param name="jardir" value="firstprog" />
		<param name="mainclass" value="FirstProgram" />
	   </antcall>
   </target>
 
   <!-- First Program -->
   <target name="CatSearch">
       <antcall target="compile">
          <param name="srcdir" value="CatSearch" />
          <param name="jarfilename" value="CatSearch.jar" />
          <param name="jardir" value="CatSearch" />
          <param name="mainclass" value="FirstProgram" />
       </antcall>
  </target>

 
   <!-- Clean -->
   <target name="clean">
     <delete dir="lib" />
     <delete dir="bin" />
     <delete>
       <fileset dir="." includes="examples/*.jar,experiments/*.jar" />
     </delete>
   </target>
   
 </project>
